'''
有趣的数字序列
描述

我们定义了这么一种有趣数字序列：
序列中都是正整数。
序列的前两项是1和2。
序列从第3项开始的数字是前面序列未出现且与前一项数字有公因数的最小自然数。
按照以上定义的规则，可以得到这个数字序列的前n项如下：
1, 2, 4, 6, 3, 9, 12, 8, 10, 5, 15, 18, 14, 7, 21, 24, 16, 20, ...
你能写一段代码，查找到给定数字n在这个数字序列中出现的位置吗？如果给定的数字不在这个序列中，则直接输出0。

输入
数字n(1<=n<1000000)

输出
数字n在序列中出现的位置k,如果数字n不在序列中则k=0

输入样例 1
n=5

输出样例 1
k=10

函数定义风格如下:
def find_number(n: int) -> int:
    return 0

'''

# 存在超时的情况, 最后在做